version: '3.9'

services:
  redis:
    container_name: redis-todoapp
    image: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning


  db:
    image: postgres:latest
    container_name: postgres-todoapp
    restart: always
    environment:
      POSTGRES_DB: todoapp-db           
      POSTGRES_USER: admin             
      POSTGRES_PASSWORD: /@1234567
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: todoapp
    command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn core.wsgi --bind 0.0.0.0:8000"
    volumes: 
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=False
      - DATABASE_URL=postgres://admin:/@1234567@db:5432/todoapp-db?schema=public
    depends_on:
      - redis
      - db

  worker:
    build: .
    volumes:
      - ./core:/app
    command: celery -A core worker -l INFO
    depends_on:
      - redis
      - backend

  beater:
    build: .
    volumes:
      - ./core:/app
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - backend

  nginx:
    image: nginx
    container_name: nginx-todoapp
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend

volumes:
  static_volume:
  media_volume:
  db_data: